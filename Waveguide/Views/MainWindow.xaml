<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:Waveguide"  
        xmlns:ig="http://schemas.infragistics.com/xaml"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        x:Class="Waveguide.MainWindow"
        Title="{Binding WindowTitle}" 
        Height="1000" Width="1200"
        Loaded="Window_Loaded" 
        ContentRendered="Window_ContentRendered"
        Unloaded="Window_Unloaded"
        WindowStartupLocation="CenterOwner"
        Icon="../Images/WG_icon1.ico">
    
    <Grid>
        <Grid.Resources>
            <local:BoolToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        </Grid.Resources>

        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="80"/>
        </Grid.RowDefinitions>

        <Button Grid.Row="0" Panel.ZIndex="10" HorizontalAlignment="Right" VerticalAlignment="Top" Content="Logout" 
                x:Name="LogoutPB" Click="LogoutPB_Click" FontSize="20"/>

        <TabControl Grid.Row="0" HorizontalAlignment="Stretch" Margin="0" VerticalAlignment="Stretch" 
                               FontSize="20"
                              x:Name="MainTabControl">

            <TabItem Header="Experiment Configurator" x:Name="ExperimentConfiguratorTab">
                <local:ExperimentConfigurator x:Name="MyExperimentConfigurator"/>
            </TabItem>
            
            <TabItem Header="Methods" x:Name="MethodsTab">
                <local:MethodManager/>
            </TabItem>
            
            
            <TabItem Header="Projects" x:Name="ProjectsTab">
                <local:ProjectManager/>
            </TabItem>
            
            
            <TabItem Header="Users" x:Name="UsersTab">
                <local:UserManager/>
            </TabItem>
            
                        
            <TabItem Header="Filters" x:Name="FiltersTab">
                <local:FilterManager x:Name="filterManager" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0"/>
            </TabItem>
  
            <TabItem Header="Plate Types" x:Name="PlateTypesTab">
                <local:PlateTypeManager x:Name="plateTypeManager" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0"/>
            </TabItem>

            <TabItem Header="Reporting" x:Name="ReportingTab">
                <local:PlateExplorer x:Name="plateExplorer" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0"/>
            </TabItem>

            <TabItem Header="Maintenance" x:Name="MaintenanceTab">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="120"/>
                        <RowDefinition Height="120"/>
                        <RowDefinition Height="120"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <Button Grid.Row="0" Grid.Column="0" Width="140" Height="60" FontSize="16"
                            x:Name="Imager" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="20"
                            Content="Manual&#10;Imager"
                            Click="Imager_Click"/>

                    <Button Grid.Row="1" Grid.Column="0" Width="140" Height="60" FontSize="16"
                            HorizontalAlignment="Left" VerticalAlignment="Center" Margin="20"
                            x:Name="ViewEnclosureCameraPB" Click="ViewEnclosureCameraPB_Click">
                        <Button.Content>
                            <StackPanel Orientation="Horizontal">
                                <Label Content="Enclosure&#10;Camera" />
                                <Image Width="32" Height="32" Source="/Images/eye.png"/>
                            </StackPanel>
                        </Button.Content>
                    </Button>

                    <Button Grid.Row="2" Grid.Column="0" Width="140" Height="60" FontSize="16"
                            x:Name="ImagingModes" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="20"
                            Content="Imaging&#10;Modes"
                            Click="ImagingModes_Click"/>


                    <DataGrid Grid.Row="1" Grid.Column="1" Grid.RowSpan="3" x:Name="DatabaseDataGrid" Margin="10">
                            
                    </DataGrid>
                    
                    <Grid Grid.Row="0" Grid.Column="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Button Grid.Column="0" x:Name="RefreshDBPB" Width="100" Height="32" Content="Refresh" 
                                HorizontalAlignment="Center" VerticalAlignment="Center" Click="RefreshDBPB_Click"/>
                        <Button Grid.Column="1" x:Name="CleanUpExperimentsDBPB" Width="100" Height="32" Content="Clean Up" 
                                HorizontalAlignment="Center" VerticalAlignment="Center" Click="CleanUpExperimentsDBPB_Click"/>
                        
                    </Grid>
                    
                </Grid>
            </TabItem>
            
           
        </TabControl>
        
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="104"/>
                <ColumnDefinition Width="104"/>
                <ColumnDefinition Width="104"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="80"/>
            </Grid.ColumnDefinitions>
            
            <GroupBox Grid.Column="0"  >
                <GroupBox.Header>
                    <StackPanel Orientation="Horizontal">
                        <Ellipse x:Name="CameraTempOnIndicator" 
                         Width="10" Height="10" Fill="Transparent" Margin="0,0,2,0" Stroke="Black" StrokeThickness="1"
                         HorizontalAlignment="Center" VerticalAlignment="Center"
                         MouseLeftButtonUp="CameraTempOnIndicator_MouseLeftButtonUp"/>
                        <TextBlock Text="Camera Temp"/>                        
                    </StackPanel>
                </GroupBox.Header>
                <Grid >
                    <Grid.RowDefinitions>                    
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="26"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="40"/>
                        <ColumnDefinition Width="50"/>
                    </Grid.ColumnDefinitions>               
                    <TextBlock Grid.Row="0" Grid.Column="0" x:Name="CameraTempDisplay" FontSize="24" FontWeight="Bold"
                           Height="40" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding Path=CameraTempString}"/>
                    <Image Grid.Row="0" Grid.Column="1" Height="24" Width="24" Visibility="{Binding Path=CoolingOn, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=CameraTempReady}" Value="False">
                                        <Setter Property="Source" Value="/Images/red_arrow_left_small.png"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=CameraTempReady}" Value="True">
                                        <Setter Property="Source" Value="/Images/green_check_small.png"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                    <TextBlock Grid.Row="1" Grid.Column="0" Text="Target" FontSize="10" VerticalAlignment="Center" HorizontalAlignment="Center"
                                Visibility="{Binding Path=CoolingOn, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    <ig:XamNumericInput Grid.Row="1" Grid.Column="1" Margin="0,0,0,0" Value="{Binding CameraTargetTemp,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"  
                             ValueType="System:Int32"                                       
                             Width="50" Mask="{}{number:-90-20}"
                             Visibility="{Binding Path=CoolingOn, Converter={StaticResource BooleanToVisibilityConverter}}"           
                            SpinButtonDisplayMode="Always" SpinIncrement="5"/>
                </Grid>
            </GroupBox>

            <GroupBox Grid.Column="1"  >
                <GroupBox.Header>
                    <StackPanel Orientation="Horizontal">
                        <Ellipse x:Name="InsideTempOnIndicator" 
                         Width="10" Height="10" Fill="Transparent" Margin="0,0,2,0" Stroke="Black" StrokeThickness="1"
                         HorizontalAlignment="Center" VerticalAlignment="Center"
                         MouseLeftButtonUp="InsideTempOnIndicator_MouseLeftButtonUp"/>
                        <TextBlock Text="Inside Temp"/>
                    </StackPanel>
                </GroupBox.Header>
                <Grid >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="26"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="40"/>
                        <ColumnDefinition Width="50"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Row="0" Grid.Column="0" x:Name="InsideTempDisplay" FontSize="24" FontWeight="Bold"
                           Height="40" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding Path=InsideTempString}"/>
                    <Image Grid.Row="0" Grid.Column="1" Height="24" Width="24" Visibility="{Binding Path=HeatingOn, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=InsideTempReady}" Value="False">
                                        <Setter Property="Source" Value="/Images/red_arrow_left_small.png"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=InsideTempReady}" Value="True">
                                        <Setter Property="Source" Value="/Images/green_check.png"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                    <TextBlock Grid.Row="1" Grid.Column="0" Text="Target" FontSize="10" VerticalAlignment="Center" HorizontalAlignment="Center"
                               Visibility="{Binding Path=HeatingOn, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    <ig:XamNumericInput Grid.Row="1" Grid.Column="1" Margin="0,0,0,0" Value="{Binding InsideTargetTemp,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" 
                            ValueType="System:Int32" ValueChanged="InsideTemperatureEdit_ValueChanged"
                            Mask="{}{number:0-100}" Width="50"
                            Visibility="{Binding Path=HeatingOn, Converter={StaticResource BooleanToVisibilityConverter}}"
                            SpinButtonDisplayMode="Always" SpinIncrement="1"/>
                </Grid>
            </GroupBox>


            <GroupBox Grid.Column="2"  HorizontalAlignment="Center" Width="100">
                <GroupBox.Header>
                    <StackPanel Orientation="Horizontal">
                        <Ellipse x:Name="DoorLockedIndicator" 
                         Width="10" Height="10" Fill="Transparent" Margin="0,0,2,0" Stroke="Black" StrokeThickness="1"
                         HorizontalAlignment="Center" VerticalAlignment="Center"
                         MouseLeftButtonUp="DoorLockedIndicator_MouseLeftButtonUp"/>
                        <TextBlock Text=" Door"/>
                    </StackPanel>
                </GroupBox.Header>
                <Grid >
                    <Grid.RowDefinitions>                       
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    
                    <!--<TextBlock Grid.Row="1" Tag="{Binding DoorStatus}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10" >
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=DoorStatus}" Value="OPEN">
                                        <Setter Property="Text" Value="Open"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=DoorStatus}" Value="CLOSED">
                                        <Setter Property="Text" Value="Closed"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=DoorStatus}" Value="LOCKED">
                                        <Setter Property="Text" Value="Locked"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>-->

                    <Image Grid.Row="0" Tag="{Binding DoorStatus}"  Height="32" Width="32" Margin="0,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" >
                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=DoorStatus}" Value="OPEN">
                                        <Setter Property="Source" Value="/Images/unlock.png"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=DoorStatus}" Value="CLOSED">
                                        <Setter Property="Source" Value="/Images/unlock.png"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=DoorStatus}" Value="LOCKED">
                                        <Setter Property="Source" Value="/Images/lock.png"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                 

                </Grid>
            </GroupBox>

            <TextBox Grid.Column="3" x:Name="MainMessageWindow" TextWrapping="Wrap" AcceptsReturn="True"
                     VerticalScrollBarVisibility="Auto" IsReadOnly="True" />




            <Popup x:Name="CameraCoolerOnOffPopup" IsOpen="False" Placement="Mouse">
                <Border BorderBrush="Transparent" BorderThickness="1" Background="White" Padding="2">
                    <StackPanel Orientation="Vertical">
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="Cam Cooler"
                                   Background="White" Foreground="Black" FontSize="10"/>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <Button x:Name="CameraCoolerOnPB" Click="CameraCoolerOnPB_Click"  Margin="1">
                                <Button.Content>
                                    <Image Width="24" Height="24" Source="/Images/On.png"/>
                                </Button.Content>
                            </Button>
                            <Button x:Name="CameraCoolerOffPB" Click="CameraCoolerOffPB_Click"  Margin="1">
                                <Button.Content>
                                    <Image Width="24" Height="24" Source="/Images/Off.png"/>
                                </Button.Content>
                            </Button>                        
                        </StackPanel>
                    </StackPanel>
                </Border>
            </Popup>


            <Popup x:Name="HeaterOnOffPopup" IsOpen="False" Placement="Mouse">
                <Border BorderBrush="Transparent" BorderThickness="1" Background="White" Padding="2">
                    <StackPanel Orientation="Vertical">
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="Heater Control"
                                   Background="White" Foreground="Black" FontSize="10"/>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <Button x:Name="HeaterOnPB" Click="HeaterOnPB_Click" Margin="1">
                                <Button.Content>
                                    <Image Width="24" Height="24" Source="/Images/On.png"/>
                                </Button.Content>
                            </Button>
                            <Button x:Name="HeaterOffPB" Click="HeaterOffPB_Click" Margin="1">
                                <Button.Content>
                                    <Image Width="24" Height="24" Source="/Images/Off.png"/>
                                </Button.Content>
                            </Button>
                        </StackPanel>
                    </StackPanel>
                </Border>
            </Popup>


            <Popup x:Name="DoorLockPopup" IsOpen="False" Placement="Mouse">
                <Border BorderBrush="Transparent" BorderThickness="1" Background="White" Padding="2">
                    <StackPanel Orientation="Vertical">
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="Door Lock"
                                   Background="White" Foreground="Black" FontSize="10"/>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <Button x:Name="DoorLockOnPB" Click="DoorLockOnPB_Click"  Margin="1">
                                <Button.Content>
                                    <Image Width="24" Height="24" Source="/Images/On.png"/>
                                </Button.Content>
                            </Button>
                            <Button x:Name="DoorLockOffPB" Click="DoorLockOffPB_Click"  Margin="1">
                                <Button.Content>
                                    <Image Width="24" Height="24" Source="/Images/Off.png"/>
                                </Button.Content>
                            </Button>
                        </StackPanel>
                    </StackPanel>
                </Border>
            </Popup>

        </Grid>





        <!-- Sliding Panel START -->
        <!--  This sliding panel must be bound to a bool in the View Model.  This bool is bound in 2 places: 
                1 - in the "IsHitTestVisible" for the Sliding Panel's Grid 
                2 - in the DataTrigger for the Animation 
        
            The content of the Sliding Panel is placed inside the Border control -->

        <!--                                                                            View Model Binding here vvvv  -->
        <Grid Grid.Row="0" x:Name="RunExperimentPanel" Background="Transparent" IsHitTestVisible="True" Panel.ZIndex="100">


            <Grid.Style>
                <Style TargetType="{x:Type Grid}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ShowRunExperimentPanel}" Value="True">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ShowRunExperimentPanel}" Value="False">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>

            <Border VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="0,0,0,10"  x:Name="ContentBorder"
                    BorderBrush="DarkGray" BorderThickness="1" Background="White" CornerRadius="0" IsHitTestVisible="True" >
          
                <!-- Put the Sliding Panel contents here, inside this Border -->

                <local:RunExperimentControl x:Name="MyRunExperimentControl" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" IsHitTestVisible="True" />


            </Border>

        </Grid>
        <!-- Sliding Panel END -->



    </Grid>
</Window>
